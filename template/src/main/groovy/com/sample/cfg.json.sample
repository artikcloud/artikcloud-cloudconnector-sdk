{
    // URL used to perform Authorization Request.
    // Required for Oauth1 and Oauth2.
    // type: string (url format, no querystring)
    "authorizationUrl": "http://...",

    // URL used to for Access Token Request.
    // Request to have a token (with code or with refresh token)
    // Required for Oauth1 and Oauth2.
    // type: string (url format, no querystring)
    "accessTokenUrl": "http://...",

    // A Mapping table used to rename parameters on the response of an Access Token Request.
    // Existing parameter name for Oauth2: "access_token", "expires_in", "scope", "refresh_token", "userid", "token_type", "external_id"
    // Existing parameter name for Oauth1: "external_id"
    // optional default: null (== no mapping)
    // eg:
    //    {
    //      "access_token":"AccessToken",
    //      "external_id":"UserId"
    //    }
    "accessTokenUrlMapper": null,

    // clientId provides by third party cloud to the ARTIK Cloud CloudConnector Application
    // required
    // type: string (no blank)
    "clientId": "myClientId",

    // clientSecret provides by third party cloud to the ARTIK Cloud CloudConnector Application
    // required
    // type: string (no blank)
    "clientSecret": "abigsecret",

    // Authorization protocol to connect to third party cloud.
    // optional default: "OAuth2"
    // type: value from ["OAuth1", "OAuth2", "CustomAuth", "None"]
    "authType": "OAuth2",

    // Http status to return when third party cloud send notification.
    // optional default: 200
    // type: integer (range 100 - 599)
    "statusAcceptNotification": 200,

    // A free zone where CloudConnector's dev can store any data (vs hard code).
    // optional default: []
    // type: map(string -> string)
    "parameters": {
      "endpoint": "http://..."
    },

    // A Mapping table used to convert external device type into Artik Cloud device type.
    // It's used when create a (sub) device via an Event.
    // optional default: null
    // type: map(string -> string)
    // eg: {"Air_Conditioner": "dt01", "Robot_Cleaner": "dt02" }
    "extSdtidsMapper": null,

    //--- used by OAuth 1 only ---

    // The request token URL provided by the OAuth1 provider.
    // Used by The client to obtain a set of token credentials from the server by calling to the Token Request endpoint
    // optional default: null
    // Mandatory for Oauth1
    // type: string (url format, no querystring)
    "requestTokenUrl": null,

    // Use a variant 1.0a of OAuth1.
    // optional default: true
    // type: boolean
    "use10a": true,

    //--- used by OAuth 2 only ---

    // Http's method to use to request access token
    // valid: ["get", "post"]
    // optional default: "get"
    "accessTokenMethod": "get",

    // List of permissions / scope to request on third party cloud : Used by Oauth2 only.
    // type: list of string
    // UI: a single textfield with space separated value (standard), the UI should split the string into a list
    // Optional , default = []
    "scope": [],

    // The grant type mode use to acquire accessToken
    // valid ["code", "password"]
    // optional default: "code"
    "authorizationGrant": "code",

    // A Mapping table used to rename parameters on authorization request on Oauth2.
    // https://tools.ietf.org/html/rfc6749#section-4.1.1
    // Existing parameter name : "scope", "response_type", "client_id", "state", "redirect_uri"
    // optional default: null (== no mapping)
    // eg: { "scope":"APIName" }
    "authorizationUrlMapper": null
}
